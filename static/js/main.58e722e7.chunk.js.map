{"version":3,"sources":["contexts/TimerProvider.js","components/Options.js","components/Display.js","components/Control.js","App.js","reportWebVitals.js","index.js"],"names":["TimerContext","React","createContext","TimerContextProvider","children","useState","breaker","setBreaker","session","setSession","status","setStatus","minutes","setMinutes","seconds","setSeconds","pause","setPause","refresh","setRefresh","useEffect","myInterval","setInterval","clearInterval","Provider","value","addBreaker","removeBreaker","addSession","removeSession","play","pauseToggler","refreshToggler","currentTime","library","add","fas","fab","Options","useContext","className","id","onClick","icon","Display","Control","sound","useRef","current","src","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e722e7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nexport const TimerContext = React.createContext();\r\n\r\nexport const TimerContextProvider = ({ children }) => {\r\n    const [breaker, setBreaker] = useState(5)\r\n    const [session, setSession] = useState(25)\r\n    const [status, setStatus] = useState('Session')\r\n\r\n    const [minutes, setMinutes] = useState(session);\r\n    const [seconds, setSeconds] = useState('00');\r\n\r\n    const [pause, setPause] = useState(false)\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    const pauseToggler = () => {\r\n        setPause(!pause)\r\n    }\r\n\r\n    const statusToggler = () => {\r\n        if (status === 'Session') {\r\n            breaker < 10 ? setMinutes(`0${breaker}`) : setMinutes(breaker)\r\n            setStatus('Break')\r\n        } else {\r\n            session < 10 ? setMinutes(`0${session}`) : setMinutes(session)\r\n            setStatus('Session')\r\n        }\r\n    }\r\n\r\n    const addBreaker = () => {\r\n        if (breaker < 60 && !pause) {\r\n            setBreaker(breaker + 1)\r\n            if (status === 'Break') {\r\n                minutes >= 9 ? setMinutes(`0${breaker + 1}`) : setMinutes(breaker + 1)\r\n                setSeconds('00')\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeBreaker = () => {\r\n        if (breaker > 1 && !pause) {\r\n            setBreaker(breaker - 1)\r\n            if (status === 'Break') {\r\n                minutes <= 10 ? setMinutes(`0${breaker - 1}`) : setMinutes(breaker - 1)\r\n                setSeconds('00')\r\n            }\r\n        }\r\n    }\r\n\r\n    const addSession = () => {\r\n        if (session < 60 && !pause) {\r\n            setSession(session + 1)\r\n            if (status === 'Session') {\r\n                minutes >= 9 ? setMinutes(session + 1) : setMinutes(`0${session + 1}`)\r\n\r\n                setSeconds('00')\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeSession = () => {\r\n        if (session > 1 && !pause) {\r\n            setSession(session - 1)\r\n            if (status === 'Session') {\r\n                minutes <= 10 ? setMinutes(`0${session - 1}`) : setMinutes(session - 1)\r\n                setSeconds('00')\r\n            }\r\n        }\r\n    }\r\n    const play = (value) => {\r\n        value.play()\r\n    }\r\n\r\n    const refreshToggler = (value) => {\r\n        setRefresh(!refresh)\r\n        setSession(25)\r\n        setBreaker(5)\r\n        setStatus('Session')\r\n        setMinutes(25)\r\n        setSeconds('00')\r\n        setPause(false)\r\n        value.pause()\r\n        value.currentTime = 0\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (pause) {\r\n            let myInterval = setInterval(() => {\r\n                if (+seconds > 0) {\r\n                    seconds <= 10 && seconds > 0 ? setSeconds(`0${+seconds - 1}`) : setSeconds(+seconds - 1);\r\n                }\r\n                if (+seconds === 0) {\r\n                    if (+minutes === 0) {\r\n                        clearInterval(myInterval)\r\n                        statusToggler()\r\n                    } else {\r\n                        setSeconds(59);\r\n                        minutes <= 10 && minutes > 0 ? setMinutes(`0${+minutes - 1}`) : setMinutes(+minutes - 1);\r\n                    }\r\n                }\r\n            }, 1000)\r\n            return () => {\r\n                clearInterval(myInterval);\r\n            };\r\n        }\r\n    }, [pause, minutes, seconds]);\r\n    return (\r\n        <TimerContext.Provider value={{\r\n            breaker,\r\n            addBreaker: addBreaker,\r\n            removeBreaker: removeBreaker,\r\n            session,\r\n            addSession: addSession,\r\n            removeSession: removeSession,\r\n            status,\r\n            minutes,\r\n            seconds,\r\n            play: play,\r\n            pause,\r\n            pauseToggler: pauseToggler,\r\n            refresh,\r\n            refreshToggler: refreshToggler\r\n        }}>\r\n            {children}\r\n        </TimerContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { TimerContext } from '../contexts/TimerProvider'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\n\r\nlibrary.add(fas, fab);\r\n\r\n\r\n\r\nconst Options = () => {\r\n    const { session, breaker, addBreaker, removeBreaker, addSession, removeSession } = useContext(TimerContext)\r\n    return (\r\n        <div className='options'>\r\n            <div className='row row--justify_between'>\r\n                <div className='cell cell--6' id=\"break-label\">\r\n                    <div className='options__title'>\r\n                        <h2 className='caption caption--size_4 caption--align_center'>Break Length</h2>\r\n                    </div>\r\n                    <div className='options__controls'>\r\n                        <button id=\"break-decrement\" onClick={() => { removeBreaker() }}>\r\n                            <span>\r\n                                <FontAwesomeIcon icon={['fas', 'arrow-down']} className=\"icon icon-down\" />\r\n                            </span>\r\n                        </button>\r\n                        <div id=\"break-length\">\r\n                            <h3 className='caption caption--size_3 caption--align_center'>\r\n                                {breaker}\r\n                            </h3>\r\n                        </div>\r\n                        <button id=\"break-increment\" onClick={() => { addBreaker() }}>\r\n                            <span>\r\n                                <FontAwesomeIcon icon={['fas', 'arrow-up']} className=\"icon icon-up\" />\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className='cell cell--6' id=\"session-label\">\r\n                    <div className='options__title'>\r\n                        <h2 className='caption caption--size_4 caption--align_center'>Session Length</h2>\r\n                    </div>\r\n                    <div className='options__controls'>\r\n                        <button id=\"session-decrement\" onClick={() => { removeSession() }}>\r\n                            <span>\r\n                                <FontAwesomeIcon icon={['fas', 'arrow-down']} className=\"icon icon-down\" />\r\n                            </span>\r\n                        </button>\r\n                        <div id=\"session-length\">\r\n                            <h3 className='caption caption--size_3 caption--align_center'>\r\n                                {session}\r\n                            </h3>\r\n                        </div>\r\n                        <button id=\"session-increment\" onClick={() => { addSession() }}>\r\n                            <span>\r\n                                <FontAwesomeIcon icon={['fas', 'arrow-up']} className=\"icon icon-up\" />\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options","import React, { useContext } from 'react'\r\nimport { TimerContext } from \"../contexts/TimerProvider\";\r\n\r\nconst Display = () => {\r\n\r\n    const { minutes, seconds, status } = useContext(TimerContext)\r\n\r\n\r\n    return (\r\n        <div className={`screen ${minutes < 1 ? 'is-active' : ''}`} id='display' >\r\n            <div className='screen__title' id=\"timer-label\">\r\n                <h3 className='caption caption--size_3 caption--align_center caption--line_height_1'>\r\n                    {status}\r\n                </h3>\r\n            </div>\r\n            <div className='screen__time' id=\"time-left\">\r\n                <h3 className='caption caption--size_1 caption--align_center caption--line_height_1 caption--bold'>\r\n                    {minutes}:{seconds}\r\n                </h3>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Display\r\n\r\n","\r\nimport React, { useContext, useRef } from 'react';\r\nimport { TimerContext } from \"../contexts/TimerProvider\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\n\r\nlibrary.add(fas, fab);\r\n\r\n\r\n\r\n\r\nconst Control = () => {\r\n    const { minutes, seconds, pauseToggler, refreshToggler, play } = useContext(TimerContext)\r\n    const sound = useRef();\r\n    if (seconds === '00' && minutes === '00') {\r\n        play(sound.current)\r\n    }\r\n    return (\r\n        <div className='control'>\r\n            <div className=\"control__buttons\">\r\n                <button id=\"start_stop\"\r\n                    onClick={() => {\r\n                        pauseToggler()\r\n                    }}>\r\n                    <FontAwesomeIcon icon={['fas', 'play']} className=\"icon icon-down\" />\r\n                    <FontAwesomeIcon icon={['fas', 'pause']} className=\"icon icon-down\" />\r\n                </button>\r\n                <button id=\"reset\" onClick={() => {\r\n                    refreshToggler(sound.current)\r\n                }}>\r\n                    <FontAwesomeIcon icon={['fas', 'sync-alt']} className=\"icon icon-down\" />\r\n                </button>\r\n            </div>\r\n            <div className='audio'>\r\n                <audio id='beep' src='https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav'\r\n                    ref={sound}></audio>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Control","import React from 'react';\nimport './sass/App.sass';\n\nimport Options from './components/Options'\nimport Display from './components/Display'\nimport Control from './components/Control';\n\nimport { TimerContextProvider } from './contexts/TimerProvider';\n\n\n\nfunction App() {\n\n\n  return (\n    <div className='App'>\n      <div className='clock'>\n        <h1 className='caption caption--size_2 caption--bold caption--align_center caption--line_height_1'>25 + 5 Clock</h1>\n        <TimerContextProvider>\n          <Options />\n          <Display />\n          <Control />\n        </TimerContextProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}